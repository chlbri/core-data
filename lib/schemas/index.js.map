{"version":3,"file":"index.js","sources":["../../src/schemas/index.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { Ra, Ru } from '../types';\n\nexport * from './objects';\nexport * from './strings';\n\nexport type TransformToZodShape<T extends Ra> = {\n  [key in keyof T]: T[key] extends Ru\n    ? z.ZodObject<TransformToZodShape<T[key]>>\n    : z.ZodTypeAny;\n};\n\nconst tt = z.object({\n  age: z.number(),\n  login: z.string(),\n  password: z.string(),\n  data: z.object({\n    phoneNumber: z.object({\n      country: z.number(),\n      number: z.number(),\n      ex: z.object({\n        one: z.number(),\n        two: z.boolean(),\n      }),\n    }),\n  }),\n});\n\ntype TT1 = z.infer<typeof tt>;\n\nexport type TT2 = z.infer<z.ZodObject<TransformToZodShape<TT1>>>;\n\n// export type TransformToZodShape<T extends Ru> = Record<\n//   keyof T,\n//   z.ZodTypeAny\n// >;\n\nexport type TransformToZodObject<T extends Ru> = z.ZodObject<\n  TransformToZodShape<T>\n>;\n"],"names":[],"mappings":";;;;AAYW,CAAC,CAAC,MAAM,CAAC;AAClB,IAAA,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE;AACf,IAAA,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE;AACjB,IAAA,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE;AACpB,IAAA,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;AACb,QAAA,WAAW,EAAE,CAAC,CAAC,MAAM,CAAC;AACpB,YAAA,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE;AACnB,YAAA,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE;AAClB,YAAA,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC;AACX,gBAAA,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE;AACf,gBAAA,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE;aACjB,CAAC;SACH,CAAC;KACH,CAAC;AACH,CAAA"}