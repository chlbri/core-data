{"version":3,"file":"arrayDB.js","sources":["../../src/adapters/arrayDB.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { decompose, recompose, type Ru } from '@bemedev/decompose';\nimport { ReturnData } from '@bemedev/return-data';\nimport type {\n  PermissionErrorStatus,\n  RedirectStatus,\n  ServerErrorStatus,\n} from '@bemedev/return-data/lib/types';\nimport { castDraft, produce } from 'immer';\nimport { nanoid } from 'nanoid';\nimport { merge } from 'ts-deepmerge';\nimport type { z } from 'zod';\nimport { timestampsSchema } from '../schemas';\nimport type { DSO } from '../types';\nimport type {\n  Actor,\n  CollectionPermissions,\n  EntryWithPermissions,\n  MaybeId,\n  PermissionsArray,\n  PermissionsKeys,\n  SimpleActor,\n  TimeStamps,\n  TimeStampsPermissions,\n  WithEntity,\n  WithId,\n  WithoutTimeStamps,\n} from '../types/entities';\nimport type {\n  Count,\n  CountAll,\n  CreateMany,\n  CreateOne,\n  DeleteAll,\n  DeleteMany,\n  DeleteManyByIds,\n  DeleteOne,\n  DeleteOneById,\n  Projection,\n  QueryOptions,\n  Read,\n  ReadAll,\n  ReadMany,\n  ReadManyByIds,\n  ReadOne,\n  ReadOneById,\n  RemoveAll,\n  RemoveMany,\n  RemoveManyByIds,\n  RemoveOne,\n  RemoveOneById,\n  Repository,\n  RetrieveAll,\n  RetrieveMany,\n  RetrieveManyByIds,\n  RetrieveOne,\n  RetrieveOneById,\n  SetAll,\n  SetAllWithOne,\n  SetMany,\n  SetManyByIds,\n  SetManyByIdsWithOne,\n  SetManyWithOne,\n  SetOne,\n  SetOneById,\n  UpdateAll,\n  UpdateAllWithOne,\n  UpdateMany,\n  UpdateManyByIds,\n  UpdateManyByIdsWithOne,\n  UpdateManyWithOne,\n  UpdateOne,\n  UpdateOneById,\n  UpsertMany,\n  UpsertOne,\n  WT,\n} from '../types/repo';\nimport {\n  countOccurences,\n  inStreamSearchAdapter,\n  intersectObjects,\n  withProjection,\n  withProjection2,\n  zodDecomposeKeys,\n} from './arrayDB.functions';\n\n// type Permission<T extends Entity> = {\n//   permissionReader: PermissionsReaderOne<T>;\n// };\n\nexport type CollectionArgs<T extends z.AnyZodObject = z.AnyZodObject> = {\n  _schema: T;\n  _actors?: Actor[];\n  permissions?: CollectionPermissions;\n  checkPermissions?: boolean;\n  test?: boolean;\n  name?: string;\n};\n\nexport type ReduceByPermissionsArgs<\n  T extends Ru,\n  P extends Projection<T> = [],\n> = {\n  actor: SimpleActor | true;\n  filters?: DSO<T>;\n  ids?: string[];\n  options?: QueryOptions<P>;\n  key?: PermissionsKeys;\n};\n\ntype ZodWT<T extends z.AnyZodObject> = WT<z.infer<T>>;\ntype ZodWithoutT<T extends z.AnyZodObject> = WithoutTimeStamps<z.infer<T>>;\ntype ZodWithIDandT<T extends z.AnyZodObject> = WithId<\n  WithoutTimeStamps<z.infer<T>>\n>;\ntype ZodWithIDandT_P<T extends z.AnyZodObject> = WithId<WT<z.infer<T>>>;\ntype ZodWithEntity<T extends z.AnyZodObject> = WithEntity<z.infer<T>>;\n\nconst TEST_SUPER_ADMIN_ID = 'super-admin';\n\nexport class CollectionDB<T extends z.AnyZodObject>\n  implements Repository<z.infer<T>>\n{\n  // #region Properties\n  private _collection: WithEntity<z.infer<T>>[];\n  private _colPermissions: EntryWithPermissions<z.infer<T>>[];\n  private _schema: CollectionArgs['_schema'];\n  private _actors: Required<CollectionArgs<T>>['_actors'] = [];\n  private _permissions?: CollectionArgs<T>['permissions'];\n  private checkPermissions: Required<\n    CollectionArgs<T>\n  >['checkPermissions'];\n  private test: Required<CollectionArgs<T>>['test'];\n  name: string;\n  // #endregion\n\n  /**\n   * Only in test mode\n   */\n  get collection() {\n    if (this.test) {\n      return this._collection;\n    }\n    return [];\n  }\n\n  /**\n   * Only in test mode\n   */\n  get colPermissions() {\n    if (this.test) {\n      return this._colPermissions;\n    }\n    return [];\n  }\n\n  __seed = async (...arr: MaybeId<ZodWithoutT<T>>[]) => {\n    if (this.test) {\n      const out = arr.map(({ _id, ...data }) => {\n        return this.generateCreate(TEST_SUPER_ADMIN_ID, data as any, _id);\n      });\n      return out;\n    }\n    return [];\n  };\n\n  constructor({\n    _schema,\n    _actors,\n    permissions,\n    checkPermissions,\n    test = true,\n    name = 'test',\n  }: CollectionArgs<T>) {\n    // #region Constructore Variables\n    this._schema = _schema;\n    if (_actors) this._actors.push(..._actors);\n    this._permissions = permissions;\n    this.checkPermissions = !!checkPermissions;\n    this.test = !!test;\n    this.name = name;\n    // #endregion\n\n    this._collection = [];\n    this._colPermissions = [];\n  }\n\n  get canCheckPermissions() {\n    return (\n      this.checkPermissions &&\n      !!this._permissions &&\n      this._actors.length > 0\n    );\n  }\n\n  private _getActor = (ID: string) => {\n    return this._actors.find(({ actorID }) => ID === actorID);\n  };\n\n  canCreate = (actorID: string) => {\n    if (this.canCheckPermissions) {\n      const actor = this._getActor(actorID);\n      if (!actor) return false;\n      const superAdmin = actor.superAdmin === true;\n      if (superAdmin) return true;\n\n      const permissions = actor.permissions;\n      if (!permissions) return false;\n      if (!this._permissions) return false;\n      return permissions.includes(this._permissions.__create);\n    }\n    return true;\n  };\n\n  canDeleteDoc = (actorID: string) => {\n    if (this.canCheckPermissions) {\n      const actor = this._getActor(actorID);\n      if (!actor) return false;\n      const superAdmin = actor.superAdmin === true;\n      if (superAdmin) return true;\n\n      const permissions = actor.permissions;\n      if (!permissions) return false;\n      if (!this._permissions) return false;\n      return permissions.includes(this._permissions.__remove);\n    }\n    return true;\n  };\n\n  static generateServerError = (\n    status: ServerErrorStatus,\n    ...messages: string[]\n  ) => {\n    return new ReturnData({ status, messages });\n  };\n\n  static generateEmptyDBError = (status: ServerErrorStatus) => {\n    const messages = [`This collection (${this.name}) is empty`];\n    return new ReturnData({ status, messages });\n  };\n\n  get schema() {\n    return this._schema;\n  }\n\n  _rinitDB() {\n    this._collection.length = 0;\n    this._colPermissions.length = 0;\n  }\n\n  get length() {\n    return this._collection.length;\n  }\n\n  static mapperWithoutTimestamps<T extends Ru = Ru>() {\n    const mapper = ({\n      _created,\n      _deleted,\n      _updated,\n      ...data\n    }: WithEntity<T>) => data as WithId<WithoutTimeStamps<T>>;\n    return mapper;\n  }\n\n  private _withoutTimestamps = (\n    filters?: DSO<ZodWT<T>>,\n    ...ids: string[]\n  ) => {\n    const collection = this._withoutTimestampsByIds(...ids);\n\n    if (!filters) {\n      return collection;\n    }\n    const _filters = inStreamSearchAdapter(filters);\n\n    const out = collection.filter(_filters);\n    return out;\n  };\n\n  private _withoutTimestampsByIds = (...ids: string[]) => {\n    const mapper = CollectionDB.mapperWithoutTimestamps<z.infer<T>>();\n    const check = !ids.length;\n\n    if (check) {\n      const out = this._collection.map(mapper);\n      return out;\n    }\n\n    const _filters = ({ _id }: ZodWithEntity<T>) => {\n      ids.includes(_id);\n    };\n    const out = this._collection.filter(_filters).map(mapper);\n\n    return out;\n  };\n\n  private _withoutTimestampsPermissions = (...ids: WithId<unknown>[]) => {\n    const rawPermissions: WithId<\n      WithoutTimeStamps<EntryWithPermissions<z.infer<T>>>\n    >[] = [];\n\n    // #region Populate constant \"rawPermissions\"\n    for (const { _id } of ids) {\n      const permission = this._colPermissions.find(\n        permission => permission._id === _id,\n      );\n      const { _created, _deleted, _updated, ...data } = permission!;\n      rawPermissions.push(data as any);\n    }\n    return rawPermissions;\n  };\n\n  // #region reduceByPermissions\n  private reducePermissionsFirstStep<\n    P extends Projection<z.infer<T>> = [],\n  >(\n    ids?: string[],\n    filters?: DSO<ZodWithoutT<T>>,\n    options?: QueryOptions<P>,\n  ) {\n    const args = ids ? ([filters, ...ids] as const) : ([filters] as const);\n    const rawReads = this._withoutTimestamps(...args);\n    const isLimited = !!options?.limit && options.limit > rawReads.length;\n\n    const slicedReads = rawReads.slice(0, options?.limit);\n    const projection = (options?.projection ?? []) as P;\n\n    type Out = Read<z.infer<T>, P>[];\n    const rawReadsWithProjection = slicedReads.map(data =>\n      //@ts-expect-error okkk\n      withProjection<any, string[]>(data, ...projection),\n    ) as Out;\n\n    return {\n      slicedReads,\n      projection,\n      isLimited,\n      rawReads,\n      rawReadsWithProjection,\n    };\n  }\n\n  private reducePermissionsSecondStep<\n    P extends Projection<z.infer<T>> = [],\n  >(actor: SimpleActor, slicedReads: ZodWithIDandT<T>[], projection: P) {\n    const actorPermissions = actor.permissions;\n    const rawPermissions = this._withoutTimestampsPermissions(\n      ...slicedReads,\n    );\n\n    /**\n     * Decompose the raw Reads for better permission checking\n     */\n    const flattenReads = slicedReads.map(decompose);\n\n    /**\n     * Filter keys with projection\n     */\n    const flattenReadsWithProjection = flattenReads.map(data => {\n      //@ts-expect-error ookkk\n      return withProjection2(data, ...projection);\n    }) as any[];\n\n    /**\n     * Decompose the raw Permission for better permission checking\n     */\n    const flattenPermissions = rawPermissions.map(\n      decompose,\n    ) as unknown as WithId<Record<string, PermissionsArray>>[];\n    return {\n      flattenPermissions,\n      flattenReadsWithProjection,\n      actorPermissions,\n    };\n  }\n\n  private reduceByPermissions = <P extends Projection<z.infer<T>> = []>({\n    actor,\n    filters,\n    ids,\n    options,\n    key: permissionKey = '__read',\n  }: ReduceByPermissionsArgs<z.infer<T>, P>) => {\n    const {\n      slicedReads,\n      projection,\n      isLimited,\n      rawReads,\n      rawReadsWithProjection,\n    } = this.reducePermissionsFirstStep<P>(ids, filters, options);\n\n    type Out = typeof rawReadsWithProjection;\n\n    /**\n     * Check if some records are resticted by permissions\n     */\n    let isRestricted = false;\n\n    /**\n     * Grant all permissions for superAdmin\n     */\n    if (actor === true) {\n      return { payload: rawReadsWithProjection, isRestricted, isLimited };\n    }\n\n    if (slicedReads.length === 0) {\n      return { payload: rawReadsWithProjection, isRestricted, isLimited };\n    }\n\n    const {\n      flattenPermissions,\n      flattenReadsWithProjection,\n      actorPermissions,\n    } = this.reducePermissionsSecondStep<P>(\n      actor,\n      slicedReads,\n      projection,\n    );\n\n    const payload: Out = [];\n    const restrictedKeys: string[] = [];\n\n    flattenPermissions.forEach(({ _id, ...perm }, index) => {\n      const permissionsEntries = Object.entries(perm);\n\n      // #region Check if the data has no permissions restrictions\n      const permissionsValues = permissionsEntries.map(\n        ([, value]) => value,\n      );\n\n      const check1 = permissionsValues.every(\n        (val: any) => val.length === 0,\n      );\n      if (check1) {\n        const payload1 = flattenReadsWithProjection[index] as Out[number];\n        payload.push(payload1);\n      }\n      // #endregion\n      else {\n        // #region Check if actor has all required permissions\n        permissionsEntries.forEach(([key1, value1]) => {\n          const __read = value1[permissionKey];\n          const check11 = __read.every(_read =>\n            actorPermissions.includes(_read),\n          );\n          if (!check11) {\n            restrictedKeys.push(key1);\n            if (isRestricted === false) isRestricted = true;\n          }\n        });\n        const check2 = restrictedKeys.length === 0;\n        if (check2) {\n          payload.push(rawReads[index] as any);\n        }\n        // #endregion\n        else {\n          const entriesData = Object.entries(\n            flattenReadsWithProjection[index],\n          );\n          // #region Update the data without the restricted keys\n          const newRead = entriesData.filter(\n            ([key]) => !restrictedKeys.includes(key),\n          );\n\n          const updatedRead = recompose(Object.fromEntries(newRead));\n          payload.push({\n            _id,\n            ...updatedRead,\n          } as any);\n          // #endregion\n        }\n      }\n    });\n\n    const notPermitteds = countOccurences(...restrictedKeys);\n\n    return { payload, isRestricted, isLimited, notPermitteds };\n  };\n  // #endregion\n\n  // #region Create\n  // #region Static\n  static generateCreateTimestamps = (actorID: string): TimeStamps => ({\n    _created: {\n      by: actorID,\n      at: new Date(),\n    },\n    _updated: {\n      by: actorID,\n      at: new Date(),\n    },\n    _deleted: false,\n  });\n\n  static buildCreate<T extends Ru>(\n    actorID: string,\n    data: WT<T>,\n    _id = nanoid(),\n  ) {\n    const timestamps = this.generateCreateTimestamps(actorID);\n    const input = {\n      _id,\n      ...timestamps,\n      ...data,\n    } as WithEntity<T>;\n    return input;\n  }\n\n  static generateDefaultPermissions = () => {\n    const out: PermissionsArray = {\n      __read: [],\n      __update: [],\n      __remove: [],\n    };\n    return out;\n  };\n\n  static get timestampsPermissionsCreator() {\n    const keys = Object.keys(\n      timestampsSchema.shape,\n    ) as (keyof TimeStamps)[];\n    const entries = keys.map(key => {\n      const permissions = CollectionDB.generateDefaultPermissions();\n      return [key, permissions] as const;\n    });\n    const out = Object.fromEntries(entries);\n    return out as TimeStampsPermissions;\n  }\n  // #endregion\n\n  // #region Private\n  private generatePermissionCreate = (_id: string) => {\n    //@ts-expect-error oookkk\n    const keys = zodDecomposeKeys(this._schema.shape, false);\n    const entries = keys.map(key => {\n      const permissions = CollectionDB.generateDefaultPermissions();\n      return [key, permissions] as const;\n    });\n\n    const _out1 = Object.fromEntries(entries);\n    const out1 = recompose(_out1);\n    const permissions = CollectionDB.timestampsPermissionsCreator;\n    const out2 = {\n      ...out1,\n      ...permissions,\n      _id,\n    };\n    return out2 as EntryWithPermissions<T>;\n  };\n\n  protected pushPermission = (permission: EntryWithPermissions<T>) => {\n    return this._colPermissions.push(permission);\n  };\n\n  protected pushData = (data: ZodWithEntity<T>) => {\n    return this._collection.push(data);\n  };\n\n  private _createPermission = (...ids: string[]) => {\n    const permissions: EntryWithPermissions<T>[] = [];\n    ids.forEach(id => {\n      const input = this.generatePermissionCreate(id);\n      this.pushPermission(input);\n      permissions.push(input);\n    });\n\n    return permissions;\n  };\n\n  private _createData = (actorID: string, data: WT<T>, _id = nanoid()) => {\n    const input = CollectionDB.buildCreate(actorID, data, _id);\n    this.pushData(input);\n    return input;\n  };\n\n  private generateCreate = (\n    actorID: string,\n    data: ZodWithoutT<T>,\n    _id = nanoid(),\n  ) => {\n    const input = this._createData(actorID, data, _id);\n    this._createPermission(input._id);\n    return input;\n  };\n\n  // #endregion\n\n  // #region Creation\n  createMany: CreateMany<z.infer<T>> = async ({\n    actorID,\n    data: _datas,\n    options,\n  }) => {\n    // #region Check actor's permissions\n    const canCreate = this.canCreate(actorID);\n    if (!canCreate) {\n      return CollectionDB.generateServerError(\n        510,\n        'This actor cannot create elements',\n      );\n    }\n    // #endregion\n\n    const inputs = _datas.map(data =>\n      CollectionDB.buildCreate(actorID, data),\n    );\n\n    if (options && options.limit && options.limit < _datas.length) {\n      const limit = options.limit;\n\n      // #region Pushs\n      const _inputs = inputs.slice(0, limit);\n      this._collection.push(..._inputs);\n      const ids = _inputs.map(({ _id }) => _id);\n      this._createPermission(...ids);\n      // #endregion\n\n      const payload = _inputs.map(input => input._id);\n      const messages = ['Limit exceeded'];\n      const rd = new ReturnData({ status: 110, payload, messages });\n      return rd;\n    }\n\n    // #region Pushs\n    this._collection.push(...inputs);\n    const ids = inputs.map(({ _id }) => _id);\n    this._createPermission(...ids);\n    // #endregion\n\n    const payload = inputs.map(input => input._id) as string[];\n    const rd = new ReturnData({ status: 210, payload });\n    return rd;\n  };\n\n  createOne: CreateOne<z.infer<T>> = async ({ data, actorID }) => {\n    // #region Check actor's permissions\n    const canCreate = this.canCreate(actorID);\n    if (!canCreate) {\n      return CollectionDB.generateServerError(\n        511,\n        'This actor cannot create elements',\n      );\n    }\n    // #endregion\n\n    const input = this.generateCreate(actorID, data);\n    const payload = input._id;\n    const rd = new ReturnData({ status: 211, payload });\n    return rd;\n  };\n\n  upsertOne: UpsertOne<z.infer<T>> = async ({\n    actorID,\n    id: _id,\n    data,\n  }) => {\n    // #region Check actor's permissions\n    const canCreate = this.canCreate(actorID);\n    if (!canCreate) {\n      return CollectionDB.generateServerError(\n        512,\n        'This actor cannot create elements',\n      );\n    }\n    // #endregion\n\n    const _filter = (data: ZodWithEntity<T>) => _id === data._id;\n    const _exist = this._collection.find(_filter);\n    if (_exist) {\n      const messages = ['Already exists'];\n      return new ReturnData({ status: 312, payload: _id, messages });\n    } else {\n      this.generateCreate(actorID, data, _id);\n      return new ReturnData({ status: 212, payload: _id });\n    }\n  };\n\n  upsertMany: UpsertMany<z.infer<T>> = async ({\n    actorID,\n    upserts,\n    options,\n  }) => {\n    const canCreate = this.canCreate(actorID);\n    if (!canCreate) {\n      return CollectionDB.generateServerError(\n        513,\n        'This actor cannot create elements',\n      );\n    }\n    const inputs = upserts.map(({ _id, data }) => ({\n      _id: _id ?? nanoid(),\n      ...data,\n    })) as ZodWithIDandT_P<T>[];\n\n    let alreadyExists = 0;\n\n    const checkLimit =\n      options && options.limit && options.limit > upserts.length;\n    if (checkLimit) {\n      const limit = options.limit;\n      const _inputs = inputs.slice(0, limit).map(({ _id, ...data }) => {\n        const _filter = (data: ZodWithEntity<T>) => _id === data._id;\n        const _exist = this._collection.find(_filter)?._id;\n        if (_exist) alreadyExists++;\n        else {\n          // #region Pushs\n          const _input = CollectionDB.buildCreate<z.infer<T>>(\n            actorID,\n            data as any,\n            _id,\n          );\n          this._collection.push(_input);\n          this._createPermission(_input._id);\n          // #endregion\n        }\n        return { _id, ...data };\n      });\n      if (alreadyExists > 0) {\n        const check = alreadyExists === upserts.length;\n        if (check) {\n          return CollectionDB.generateServerError(513, 'All data exists');\n        }\n        return new ReturnData({\n          status: 313,\n          payload: _inputs.map(input => input._id),\n          messages: [`${alreadyExists} already exist`],\n        });\n      } else {\n        return new ReturnData({\n          status: 113,\n          payload: _inputs.map(input => input._id),\n          messages: ['Limit is reached'],\n        });\n      }\n    }\n\n    inputs.forEach(({ _id, ...data }) => {\n      const _filter = (data: ZodWithEntity<T>) => _id === data._id;\n      const _exist = this._collection.find(_filter)?._id;\n\n      if (_exist) alreadyExists++;\n      else {\n        // #region Pushs\n        const _input = CollectionDB.buildCreate<z.infer<T>>(\n          actorID,\n          data as any,\n          _id,\n        );\n        this._collection.push(_input);\n        this._createPermission(_input._id);\n        // #endregion\n      }\n      return { _id, ...data };\n    });\n\n    if (alreadyExists > 0) {\n      return new ReturnData({\n        status: 313,\n        payload: inputs.map(input => input._id),\n        messages: [`${alreadyExists} already exist`],\n      });\n    } else {\n      return new ReturnData({\n        status: 213,\n        payload: inputs.map(input => input._id),\n      });\n    }\n  };\n  // #endregion\n  // #endregion\n\n  // #region Read\n  // #region Private\n  private _canPerform = (actorID: string) => {\n    if (!this.checkPermissions) return true;\n    const actor = this._getActor(actorID);\n    if (!actor) return false;\n    const isSuperAdmin = actor.superAdmin;\n    if (isSuperAdmin) return true;\n    return actor;\n    // const { permissions, reads } = this.getDataAndPermissions(filters);\n  };\n\n  private _canPerfomExtended = (reads: any[]) => {\n    return reads.some(read => {\n      const keys = Object.keys(read);\n      const len = keys.length;\n      return len > 1;\n    });\n  };\n  // #endregion\n\n  readAll: ReadAll<z.infer<T>> = async (actorID, options) => {\n    const actor = this._canPerform(actorID);\n    if (actor !== true) {\n      const out = new ReturnData({\n        status: 620,\n        messages: ['Only SuperAdmin can read all data'],\n      });\n      return out;\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(520, 'DB is empty');\n    }\n    const rawReads = this._withoutTimestamps();\n    const reads = rawReads.map(read => {\n      const _projection = options?.projection;\n      const projection = (_projection ? _projection : []) as any;\n      return withProjection(read, ...projection) as any;\n    });\n\n    const check =\n      !!options && options.limit && options.limit > rawReads.length;\n\n    if (check) {\n      return new ReturnData({\n        status: 320,\n        payload: reads.slice(0, options.limit),\n        messages: ['Limit exceed data available'],\n      });\n    }\n\n    return new ReturnData({\n      status: 220,\n      payload: reads.slice(0, options?.limit),\n    });\n  };\n\n  readMany: ReadMany<z.infer<T>> = async ({\n    actorID,\n    filters,\n    options,\n  }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return new ReturnData({\n        status: 621,\n        // notPermitteds: ['ALL'],\n        messages: ['Actor not exists'],\n      });\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(521, 'Empty');\n    }\n\n    const { payload, isRestricted, isLimited, notPermitteds } =\n      this.reduceByPermissions({\n        actor,\n        filters,\n        options,\n      });\n\n    if (!payload.length) {\n      return new ReturnData({\n        status: 321,\n        messages: ['Empty'],\n      });\n    }\n\n    const canRead = this._canPerfomExtended(payload);\n    if (!canRead) {\n      return new ReturnData({\n        status: 621,\n        // notPermitteds: ['ALL'],\n        messages: [`Actor ${actorID} cannot read the data`],\n        payload,\n        notPermitteds,\n      });\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 321,\n        payload,\n        messages: ['Some data keys are restricted'],\n      });\n    }\n\n    if (isLimited) {\n      return new ReturnData({\n        status: 121,\n        payload,\n        messages: ['Limit Reached'],\n      });\n    }\n\n    return new ReturnData({\n      status: 221,\n      payload,\n    });\n  };\n\n  private generateNoActor = (\n    status: PermissionErrorStatus,\n    actorID?: string,\n  ) =>\n    new ReturnData({\n      status,\n      messages: [\n        `This actor ${actorID ? `${actorID} :` : ':'} not exists`,\n      ],\n    });\n\n  private generateActorCannotPerform = ({\n    status,\n    actorID,\n    action = 'read',\n  }: {\n    status: PermissionErrorStatus;\n    actorID?: string;\n    action?: 'read' | 'update' | 'delete' | 'create';\n  }) =>\n    new ReturnData({\n      status,\n      messages: [\n        `This actor ${actorID ? `${actorID} :` : ':'} cannot ${action} data`,\n      ],\n    });\n\n  readManyByIds: ReadManyByIds<z.infer<T>> = async ({\n    actorID,\n    ids,\n    filters,\n    options,\n  }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return this.generateNoActor(622, actorID);\n    }\n\n    if (!this._collection.length) {\n      CollectionDB.generateServerError(522, 'Empty');\n    }\n\n    const { payload, isRestricted, isLimited, notPermitteds } =\n      this.reduceByPermissions({\n        actor,\n        filters,\n        ids,\n        options,\n      });\n\n    if (!payload.length) {\n      return new ReturnData({\n        status: 322,\n        messages: ['Empty'],\n      });\n    }\n\n    const canRead = this._canPerfomExtended(payload);\n    if (!canRead) {\n      return new ReturnData({\n        status: 622,\n        // notPermitteds: ['ALL'],\n        messages: [`Actor ${actorID} cannot read the data`],\n        payload,\n      });\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 622,\n        payload,\n        notPermitteds,\n        messages: ['Some data keys are restricted'],\n      });\n    }\n\n    if (isLimited) {\n      return new ReturnData({\n        status: 122,\n        payload,\n        messages: ['Limit Reached'],\n      });\n    }\n\n    return new ReturnData({\n      status: 222,\n      payload,\n    });\n  };\n\n  readOne: ReadOne<z.infer<T>> = async ({ actorID, filters, options }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return new ReturnData({\n        status: 623,\n        // notPermitteds: ['ALL'],\n        messages: ['Actor not exists'],\n      });\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(523, 'Empty');\n    }\n\n    const {\n      payload: payloads,\n      isRestricted,\n      notPermitteds,\n    } = this.reduceByPermissions({\n      actor,\n      filters,\n      options,\n    });\n\n    // @ts-expect-error ookk\n    const payload = payloads[0];\n    if (!payload) {\n      return CollectionDB.generateServerError(523, 'Not Found');\n    }\n\n    const canRead = this._canPerfomExtended(payloads);\n    if (!canRead) {\n      return new ReturnData({\n        status: 623,\n        // notPermitteds: ['ALL'],\n        messages: [`Actor ${actorID} cannot read the data`],\n        payload,\n      });\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 623,\n        payload,\n        notPermitteds,\n        messages: ['Some data keys are restricted'],\n      });\n    }\n\n    return new ReturnData({ status: 223, payload });\n  };\n\n  readOneById: ReadOneById<z.infer<T>> = async ({\n    actorID,\n    id,\n    filters,\n    options,\n  }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return new ReturnData({\n        status: 624,\n        // notPermitteds: ['ALL'],\n        messages: ['Actor not exists'],\n      });\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(523, 'Empty');\n    }\n\n    const {\n      payload: payloads,\n      isRestricted,\n      notPermitteds,\n    } = this.reduceByPermissions({\n      actor,\n      filters,\n      options,\n      ids: [id],\n    });\n\n    const payload = payloads[0];\n    if (!payload) {\n      return CollectionDB.generateServerError(524, 'Not Found');\n    }\n\n    const canRead = this._canPerfomExtended(payloads);\n    if (!canRead) {\n      return this.generateActorCannotPerform({ status: 624, actorID });\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 624,\n        payload,\n        notPermitteds,\n        messages: ['Some data keys are restricted'],\n      });\n    }\n\n    return new ReturnData({ status: 224, payload });\n  };\n\n  // #region Count\n  countAll: CountAll = async actorID => {\n    const actor = this._canPerform(actorID);\n\n    if (actor !== true) {\n      return CollectionDB.generateServerError(\n        525,\n        'Only superadmin can count all',\n      );\n    }\n    const out = this._collection.length;\n    if (out <= 0) {\n      return CollectionDB.generateServerError(525, 'Empty');\n    }\n\n    return new ReturnData({ status: 225, payload: out });\n  };\n\n  count: Count<z.infer<T>> = async ({ actorID, filters, options }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return this.generateNoActor(626, actorID);\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(526, 'Empty');\n    }\n\n    const payload = this._collection.filter(\n      inStreamSearchAdapter(filters),\n    ).length;\n\n    if (payload <= 0) {\n      return new ReturnData({ status: 326, messages: ['Empty'] });\n    }\n\n    const limit = options?.limit;\n    if (limit && limit > payload) {\n      return new ReturnData({\n        status: 126,\n        payload: limit,\n        messages: ['Limit Reached'],\n      });\n    }\n\n    return new ReturnData({ status: 226, payload });\n  };\n  // #endregion\n\n  // #endregion\n\n  // #region Update\n  // #region Private\n  private __updateAllWithOne = (update: ZodWT<T>, ...ids: string[]) => {\n    const updates = ids.map(_id => ({ ...update, _id }));\n\n    return this.__update(...updates);\n  };\n\n  private __update = (...updates: ZodWithIDandT_P<T>[]) => {\n    let idsNotFound = 0;\n    const payload: string[] = [];\n\n    const __db = produce(this._collection, draft => {\n      updates.forEach(({ _id, ...update }) => {\n        const fIndex = draft.findIndex(data => data._id === _id);\n        if (fIndex !== -1) {\n          draft[fIndex] = castDraft(\n            merge(draft[fIndex], update) as ZodWithEntity<T>,\n          );\n          payload.push(_id);\n        } else {\n          idsNotFound++;\n        }\n      });\n    });\n\n    this._collection.length = 0;\n    this._collection.push(...__db);\n\n    return { idsNotFound, payload };\n  };\n\n  static generateIdsNotFound(\n    status: RedirectStatus,\n    payload: string[] | string,\n    ids = 0,\n  ) {\n    return new ReturnData({\n      status,\n      payload,\n      messages: [`Some ids (${ids}) are not found`],\n    });\n  }\n  // #endregion\n\n  updateAllWithOne: UpdateAllWithOne<z.infer<T>> = async ({\n    actorID,\n    update,\n    options,\n  }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return this.generateNoActor(630, actorID);\n    }\n\n    if (actor !== true) {\n      return new ReturnData({\n        status: 630,\n        messages: ['Only superAdmin can UpdateAll'],\n      });\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(530, 'Empty');\n    }\n\n    const limit = options?.limit;\n    const isLimited = limit && limit < this._collection.length;\n\n    const ids = this._collection.map(({ _id }) => _id);\n\n    const { payload, idsNotFound } = this.__updateAllWithOne(\n      update,\n      ...ids,\n    );\n\n    const someAreNotFound = idsNotFound > 0;\n\n    if (someAreNotFound) {\n      return new ReturnData({\n        status: 330,\n        payload,\n        messages: [`Some ids (${idsNotFound}) are not found`],\n      });\n    }\n\n    if (isLimited) {\n      return new ReturnData({\n        status: 130,\n        payload,\n        messages: ['Limit not Reached'],\n      });\n    }\n\n    return new ReturnData({\n      status: 230,\n      payload,\n    });\n  };\n\n  updateAll: UpdateAll<z.infer<T>> = async ({ actorID, datas }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return this.generateNoActor(631, actorID);\n    }\n\n    if (actor !== true) {\n      return new ReturnData({\n        status: 631,\n        messages: ['Only superAdmin can update all'],\n      });\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(531, 'Empty');\n    }\n\n    const updates = datas\n      .map(\n        (data, index) =>\n          ({\n            ...data,\n            _id: this._collection[index]?._id,\n          }) as ZodWithIDandT_P<T>,\n      )\n      .filter(data => !!data);\n\n    const isLimited = datas.length < this._collection.length;\n\n    const { payload, idsNotFound } = this.__update(...updates);\n\n    const someAreNotFound = idsNotFound > 0;\n\n    if (someAreNotFound) {\n      return new ReturnData({\n        status: 331,\n        payload,\n        messages: [`Some ${idsNotFound} are not found`],\n      });\n    }\n\n    if (isLimited) {\n      return new ReturnData({\n        status: 131,\n        payload,\n        messages: ['Limit not Reached'],\n      });\n    }\n\n    return new ReturnData({\n      status: 231,\n      payload,\n    });\n  };\n\n  updateManyWithOne: UpdateManyWithOne<z.infer<T>> = async ({\n    actorID,\n    filters,\n    update,\n    options,\n  }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return this.generateNoActor(632, actorID);\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(532, 'Empty');\n    }\n\n    const {\n      payload: rawPayload,\n      isLimited,\n      isRestricted,\n      notPermitteds,\n    } = this.reduceByPermissions({\n      actor,\n      filters,\n      options,\n      key: '__update',\n    });\n\n    if (!rawPayload.length) {\n      return new ReturnData({\n        status: 332,\n        messages: ['Filters kill data'],\n      });\n    }\n\n    const updates = rawPayload.map(data => {\n      const out = intersectObjects(data, { ...update, _id: data._id });\n      return out as WithId<WT<T>>;\n    });\n\n    const { payload, idsNotFound } = this.__update(...updates);\n\n    // this.__updateAllWithOne(update);\n\n    // const payload = rawPayload.map(({ _id }) => _id);\n    // this.__updateAllWithOne(update, ...payload);\n\n    const someIdsAreNotFound = idsNotFound > 0;\n    if (someIdsAreNotFound) {\n      return CollectionDB.generateIdsNotFound(332, payload, idsNotFound);\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 632,\n        payload,\n        notPermitteds,\n        messages: ['Some keys are restricted'],\n      });\n    }\n\n    if (isLimited) {\n      return new ReturnData({\n        status: 132,\n        payload,\n        messages: ['Limit Reached'],\n      });\n    }\n\n    return new ReturnData({\n      status: 232,\n      payload,\n    });\n  };\n\n  updateMany: UpdateMany<z.infer<T>> = async ({\n    actorID,\n    filters,\n    updates: _updates,\n    options,\n  }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return this.generateNoActor(634, actorID);\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(534, 'Empty');\n    }\n\n    const {\n      payload: rawPayload,\n      isLimited,\n      isRestricted,\n      notPermitteds,\n    } = this.reduceByPermissions({\n      actor,\n      filters,\n      options,\n      key: '__update',\n    });\n\n    if (!rawPayload.length) {\n      return new ReturnData({\n        status: 334,\n        messages: ['Filters kill data'],\n      });\n    }\n\n    const updates = rawPayload.map((data, index) => {\n      const update = _updates[index];\n      const out = intersectObjects(data, { ...update, _id: data._id });\n      return out as WithId<WT<T>>;\n    });\n\n    const { payload, idsNotFound } = this.__update(...updates);\n\n    const someIdsAreNotFound = idsNotFound > 0;\n    if (someIdsAreNotFound) {\n      return CollectionDB.generateIdsNotFound(332, payload, idsNotFound);\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 634,\n        payload,\n        notPermitteds,\n        messages: ['Some keys are restricted'],\n      });\n    }\n\n    if (isLimited) {\n      return new ReturnData({\n        status: 134,\n        payload,\n        messages: ['Limit Reached'],\n      });\n    }\n\n    return new ReturnData({\n      status: 234,\n      payload,\n    });\n  };\n\n  updateManyByIdsWithOne: UpdateManyByIdsWithOne<z.infer<T>> = async ({\n    ids,\n    filters,\n    update,\n    options,\n    actorID,\n  }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return this.generateNoActor(633, actorID);\n    }\n    if (!this._collection.length) {\n      return new ReturnData({ status: 533, messages: ['Empty'] });\n    }\n\n    const {\n      payload: rawPayload,\n      isLimited,\n      isRestricted,\n      notPermitteds,\n    } = this.reduceByPermissions({\n      actor,\n      ids,\n      filters,\n      options,\n      key: '__update',\n    });\n\n    if (!rawPayload.length) {\n      return new ReturnData({\n        status: 333,\n        messages: ['Filters kill data'],\n      });\n    }\n\n    const updates = rawPayload.map(data => {\n      const out = intersectObjects(data, { ...update, _id: data._id });\n      return out as WithId<WT<T>>;\n    });\n\n    const { payload, idsNotFound } = this.__update(...updates);\n\n    const someIdsAreNotFound = idsNotFound > 0;\n    if (someIdsAreNotFound) {\n      return CollectionDB.generateIdsNotFound(333, payload, idsNotFound);\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 633,\n        payload,\n        notPermitteds,\n        messages: ['Some keys are restricted'],\n      });\n    }\n\n    if (isLimited) {\n      return new ReturnData({\n        status: 133,\n        payload,\n        messages: ['Limit Reached'],\n      });\n    }\n\n    return new ReturnData({\n      status: 233,\n      payload,\n    });\n  };\n\n  updateManyByIds: UpdateManyByIds<z.infer<T>> = async ({\n    actorID,\n    filters,\n    updates: _updates,\n    ids,\n    options,\n  }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return this.generateNoActor(635, actorID);\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(535, 'Empty');\n    }\n\n    const {\n      payload: rawPayload,\n      isLimited,\n      isRestricted,\n      notPermitteds,\n    } = this.reduceByPermissions({\n      actor,\n      filters,\n      options,\n      ids,\n      key: '__update',\n    });\n\n    if (!rawPayload.length) {\n      return new ReturnData({\n        status: 335,\n        messages: ['Filters kill data'],\n      });\n    }\n\n    const updates = rawPayload.map((data, index) => {\n      const update = _updates[index];\n      const out = intersectObjects(data, { ...update, _id: data._id });\n      return out as WithId<WT<T>>;\n    });\n\n    const { payload, idsNotFound } = this.__update(...updates);\n\n    // this.__updateAllWithOne(update);\n\n    // const payload = rawPayload.map(({ _id }) => _id);\n    // this.__updateAllWithOne(update, ...payload);\n\n    const someIdsAreNotFound = idsNotFound > 0;\n    if (someIdsAreNotFound) {\n      return CollectionDB.generateIdsNotFound(332, payload, idsNotFound);\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 635,\n        payload,\n        notPermitteds,\n        messages: ['Some keys are restricted'],\n      });\n    }\n\n    if (isLimited) {\n      return new ReturnData({\n        status: 135,\n        payload,\n        messages: ['Limit Reached'],\n      });\n    }\n\n    return new ReturnData({\n      status: 235,\n      payload,\n    });\n  };\n\n  updateOne: UpdateOne<z.infer<T>> = async ({\n    actorID,\n    filters,\n    update,\n    options,\n  }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return this.generateNoActor(636, actorID);\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(536, 'Empty');\n    }\n\n    const {\n      payload: rawPayload,\n      isLimited,\n      isRestricted,\n      notPermitteds,\n    } = this.reduceByPermissions({\n      actor,\n      filters,\n      options,\n      key: '__update',\n    });\n\n    if (!rawPayload.length) {\n      return new ReturnData({\n        status: 336,\n        messages: ['Filters kill data'],\n      });\n    }\n    const data = rawPayload[0];\n\n    const _update = intersectObjects(data, { ...update, _id: data._id });\n\n    const { payload: payloads, idsNotFound } = this.__update(_update);\n    const payload = payloads[0];\n    // this.__updateAllWithOne(update);\n\n    // const payload = rawPayload.map(({ _id }) => _id);\n    // this.__updateAllWithOne(update, ...payload);\n    if (!payload) {\n      return CollectionDB.generateServerError(536, 'Cannot Perform');\n    }\n\n    const someIdsAreNotFound = idsNotFound > 0;\n    if (someIdsAreNotFound) {\n      return CollectionDB.generateIdsNotFound(336, payload, idsNotFound);\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 636,\n        payload,\n        notPermitteds,\n        messages: ['Some keys are restricted'],\n      });\n    }\n\n    if (isLimited) {\n      return new ReturnData({\n        status: 132,\n        payload,\n        messages: ['Limit Reached'],\n      });\n    }\n\n    return new ReturnData({\n      status: 232,\n      payload,\n    });\n  };\n\n  updateOneById: UpdateOneById<z.infer<T>> = async ({\n    id,\n    filters,\n    update,\n    options,\n    actorID,\n  }) => {\n    const actor = this._canPerform(actorID);\n\n    if (actor === false) {\n      return this.generateNoActor(637, actorID);\n    }\n    if (!this._collection.length) {\n      return new ReturnData({ status: 537, messages: ['Empty'] });\n    }\n\n    const {\n      payload: rawPayload,\n      isLimited,\n      isRestricted,\n      notPermitteds,\n    } = this.reduceByPermissions({\n      actor,\n      ids: [id],\n      filters,\n      options,\n      key: '__update',\n    });\n\n    if (!rawPayload.length) {\n      return new ReturnData({\n        status: 337,\n        messages: ['Filters kill data'],\n      });\n    }\n\n    const data = rawPayload[0];\n\n    const _update = intersectObjects(data, { ...update, _id: data._id });\n\n    const { payload: payloads, idsNotFound } = this.__update(_update);\n\n    const payload = payloads[0];\n\n    if (!payload) {\n      return CollectionDB.generateServerError(537, 'Cannot Perform');\n    }\n\n    const someIdsAreNotFound = idsNotFound > 0;\n    if (someIdsAreNotFound) {\n      return CollectionDB.generateIdsNotFound(337, payload, idsNotFound);\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 637,\n        payload,\n        notPermitteds,\n        messages: ['Some keys are restricted'],\n      });\n    }\n\n    if (isLimited) {\n      return new ReturnData({\n        status: 137,\n        payload,\n        messages: ['Limit Reached'],\n      });\n    }\n\n    return new ReturnData({\n      status: 237,\n      payload,\n    });\n  };\n  // #endregion\n\n  setAllWithOne: SetAllWithOne<z.infer<T>> = async () => {\n    throw undefined;\n  };\n\n  setAll: SetAll<z.infer<T>> = async () => {\n    throw undefined;\n  };\n\n  setManyWithOne: SetManyWithOne<z.infer<T>> = async () => {\n    throw undefined;\n  };\n\n  setMany: SetMany<z.infer<T>> = async () => {\n    throw undefined;\n  };\n\n  setManyByIdsWithOne: SetManyByIdsWithOne<z.infer<T>> = async () => {\n    throw undefined;\n  };\n\n  setManyByIds: SetManyByIds<z.infer<T>> = async () => {\n    throw undefined;\n  };\n\n  setOne: SetOne<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  setOneById: SetOneById<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  deleteAll: DeleteAll = async () => {\n    throw undefined;\n  };\n  deleteMany: DeleteMany<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  deleteManyByIds: DeleteManyByIds<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  deleteOne: DeleteOne<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  deleteOneById: DeleteOneById<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  retrieveAll: RetrieveAll = async () => {\n    throw undefined;\n  };\n  retrieveMany: RetrieveMany<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  retrieveManyByIds: RetrieveManyByIds<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  retrieveOne: RetrieveOne<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  retrieveOneById: RetrieveOneById<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  removeAll: RemoveAll = async () => {\n    throw undefined;\n  };\n  removeMany: RemoveMany<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  removeManyByIds: RemoveManyByIds<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  removeOne: RemoveOne<z.infer<T>> = async () => {\n    throw undefined;\n  };\n  removeOneById: RemoveOneById<z.infer<T>> = async () => {\n    throw undefined;\n  };\n}\n"],"names":[],"mappings":"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"}