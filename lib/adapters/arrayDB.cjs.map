{"version":3,"file":"arrayDB.cjs","sources":["../../src/adapters/arrayDB.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { decompose, recompose, type Ru } from '@bemedev/decompose';\nimport { ReturnData, ServerErrorStatus } from '@bemedev/return-data';\nimport { castDraft, produce } from 'immer';\nimport { nanoid } from 'nanoid';\nimport { merge } from 'ts-deepmerge';\nimport { TransformToZodObject, timestampsSchema } from '../schemas';\nimport { DSO } from '../types';\nimport type { MaybeId, PermissionsArray } from '../types/entities';\nimport {\n  Actor,\n  CollectionPermissions,\n  EntryWithPermissions,\n  Re,\n  TimeStamps,\n  WithEntity,\n  WithId,\n  type SimpleActor,\n  type TimeStampsPermissions,\n  type WithoutTimeStamps,\n} from '../types/entities';\nimport type {\n  Count,\n  CountAll,\n  CreateMany,\n  CreateOne,\n  DeleteAll,\n  DeleteMany,\n  DeleteManyByIds,\n  DeleteOne,\n  DeleteOneById,\n  Projection,\n  QueryOptions,\n  ReadAll,\n  ReadMany,\n  ReadManyByIds,\n  ReadOne,\n  ReadOneById,\n  RemoveAll,\n  RemoveMany,\n  RemoveManyByIds,\n  RemoveOne,\n  RemoveOneById,\n  RetrieveAll,\n  RetrieveMany,\n  RetrieveManyByIds,\n  RetrieveOne,\n  RetrieveOneById,\n  SetAll,\n  SetMany,\n  SetManyByIds,\n  SetOne,\n  SetOneById,\n  UpdateAll,\n  UpdateMany,\n  UpdateManyByIds,\n  UpdateOne,\n  UpdateOneById,\n  UpsertMany,\n  UpsertOne,\n  WT,\n} from '../types/repo';\nimport {\n  inStreamSearchAdapter,\n  withProjection,\n  withProjection2,\n  zodDecomposeKeys,\n} from './arrayDB.functions';\n\n// type Permission<T extends Entity> = {\n//   permissionReader: PermissionsReaderOne<T>;\n// };\n\nexport type CollectionArgs<T> = {\n  _schema: TransformToZodObject<WithoutTimeStamps<T>>;\n  _actors?: Actor[];\n  permissions?: CollectionPermissions;\n  checkPermissions?: boolean;\n  test?: boolean;\n};\n\nexport type ReduceByPermissionsArgs<\n  T extends Ru,\n  P extends Projection<WithId<WithoutTimeStamps<T>>> = [],\n> = {\n  actor: SimpleActor | true;\n  filters?: DSO<T>;\n  ids?: string[];\n  options?: QueryOptions<P>;\n};\n\nconst TEST_SUPER_ADMIN_ID = 'super-admin';\n\nexport class CollectionDB<T extends Ru> /* implements Repository<T> */ {\n  // #region Properties\n  private _collection: WithEntity<T>[];\n  private _colPermissions: EntryWithPermissions<T>[];\n  private _schema: CollectionArgs<T>['_schema'];\n  private _actors: Required<CollectionArgs<T>>['_actors'] = [];\n  private _permissions?: CollectionArgs<T>['permissions'];\n  private checkPermissions: Required<\n    CollectionArgs<T>\n  >['checkPermissions'];\n  private test: Required<CollectionArgs<T>>['test'];\n  // #endregion\n\n  /**\n   * Only in test mode\n   */\n  get collection() {\n    if (this.test) {\n      return this._collection;\n    }\n    return [];\n  }\n\n  /**\n   * Only in test mode\n   */\n  get colPermissions() {\n    if (this.test) {\n      return this._colPermissions;\n    }\n    return [];\n  }\n\n  private __update = (payload: string[], update: WT<T>) => {\n    const __db = produce(this._collection, draft => {\n      payload.forEach(id => {\n        const index = draft.findIndex((data: any) => data._id === id);\n        if (index !== -1) {\n          draft[index] = castDraft(\n            merge(draft[index], update) as WithEntity<T>,\n          );\n        }\n      });\n    });\n    this._rinitDB();\n    this._collection.push(...__db);\n  };\n\n  __seed = async (...arr: MaybeId<WithoutTimeStamps<T>>[]) => {\n    if (this.test) {\n      const out = arr.map(({ _id, ...data }) => {\n        return this.generateCreate(TEST_SUPER_ADMIN_ID, data as any, _id);\n      });\n      return out;\n    }\n    return [];\n  };\n\n  constructor({\n    _schema,\n    _actors,\n    permissions,\n    checkPermissions,\n    test = true,\n  }: CollectionArgs<T>) {\n    // #region Constructore Variables\n    this._schema = _schema;\n    if (_actors) this._actors.push(..._actors);\n    this._permissions = permissions;\n    this.checkPermissions = !!checkPermissions;\n    this.test = !!test;\n    // #endregion\n\n    this._collection = [];\n    this._colPermissions = [];\n  }\n\n  get canCheckPermissions() {\n    return (\n      this.checkPermissions &&\n      !!this._permissions &&\n      this._actors.length > 0\n    );\n  }\n\n  private _getActor = (ID: string) => {\n    return this._actors.find(({ actorID }) => ID === actorID);\n  };\n\n  canCreate = (actorID: string) => {\n    if (this.canCheckPermissions) {\n      const actor = this._getActor(actorID);\n      if (!actor) return false;\n      const superAdmin = actor.superAdmin === true;\n      if (superAdmin) return true;\n\n      const permissions = actor.permissions;\n      if (!permissions) return false;\n      if (!this._permissions) return false;\n      return permissions.includes(this._permissions.__create);\n    }\n    return true;\n  };\n\n  canDeleteDoc = (actorID: string) => {\n    if (this.canCheckPermissions) {\n      const actor = this._getActor(actorID);\n      if (!actor) return false;\n      const superAdmin = actor.superAdmin === true;\n      if (superAdmin) return true;\n\n      const permissions = actor.permissions;\n      if (!permissions) return false;\n      if (!this._permissions) return false;\n      return permissions.includes(this._permissions.__remove);\n    }\n    return true;\n  };\n\n  static generateServerError = (\n    status: ServerErrorStatus,\n    ...messages: string[]\n  ) => {\n    return new ReturnData({ status, messages });\n  };\n\n  get schema() {\n    return this._schema;\n  }\n\n  _rinitDB() {\n    this._collection.length = 0;\n    this._colPermissions.length = 0;\n  }\n\n  get length() {\n    return this._collection.length;\n  }\n\n  static mapperWithoutTimestamps<T extends Ru = Ru>() {\n    const mapper = ({\n      _created,\n      _deleted,\n      _updated,\n      ...data\n    }: WithEntity<T>) => data as WithId<WithoutTimeStamps<T>>;\n    return mapper;\n  }\n\n  private _withoutTimestamps = (\n    filters?: DSO<WT<T>>,\n    ...ids: string[]\n  ) => {\n    const collection = this._withoutTimestampsByIds(...ids);\n\n    if (!filters) {\n      return collection;\n    }\n    const _filters = inStreamSearchAdapter(filters);\n\n    const out = collection.filter(_filters);\n    return out;\n  };\n\n  private _withoutTimestampsByIds = (...ids: string[]) => {\n    const mapper = CollectionDB.mapperWithoutTimestamps<T>();\n    const check = !ids.length;\n\n    if (!check) {\n      return this._collection.map(mapper);\n    }\n    const _filters = ({ _id }: WithEntity<T>) => {\n      ids.includes(_id);\n    };\n    const out = this._collection.filter(_filters).map(mapper);\n    return out;\n  };\n\n  private _withoutTimestampsPermissions = (...ids: WithId<unknown>[]) => {\n    const rawPermissions: WithId<\n      WithoutTimeStamps<EntryWithPermissions<T>>\n    >[] = [];\n\n    // #region Populate constant \"rawPermissions\"\n    for (const { _id } of ids) {\n      const permission = this._colPermissions.find(\n        permission => permission._id === _id,\n      );\n      const { _created, _deleted, _updated, ...data } = permission!;\n      rawPermissions.push(data as any);\n    }\n    return rawPermissions;\n  };\n\n  // #region Create\n  // #region Static\n  static generateCreateTimestamps = (actorID: string): TimeStamps => ({\n    _created: {\n      by: actorID,\n      at: new Date(),\n    },\n    _updated: {\n      by: actorID,\n      at: new Date(),\n    },\n    _deleted: false,\n  });\n\n  static buildCreate<T extends Re>(\n    actorID: string,\n    data: WT<T>,\n    _id = nanoid(),\n  ) {\n    const timestamps = this.generateCreateTimestamps(actorID);\n    const input = {\n      _id,\n      ...timestamps,\n      ...data,\n    } as WithEntity<T>;\n    return input;\n  }\n\n  static generateDefaultPermissions = () => {\n    const out: PermissionsArray = {\n      __read: [],\n      __update: [],\n      __remove: [],\n    };\n    return out;\n  };\n\n  static get timestampsPermissionsCreator() {\n    const keys = Object.keys(\n      timestampsSchema.shape,\n    ) as (keyof TimeStamps)[];\n    const entries = keys.map(key => {\n      const permissions = CollectionDB.generateDefaultPermissions();\n      return [key, permissions] as const;\n    });\n    const out = Object.fromEntries(entries);\n    return out as TimeStampsPermissions;\n  }\n  // #endregion\n\n  // #region Private\n  private generatePermissionCreate = (_id: string) => {\n    const keys = zodDecomposeKeys(this._schema.shape, false);\n    const entries = keys.map(key => {\n      const permissions = CollectionDB.generateDefaultPermissions();\n      return [key, permissions] as const;\n    });\n\n    const _out1 = Object.fromEntries(entries);\n    const out1 = recompose(_out1);\n    const permissions = CollectionDB.timestampsPermissionsCreator;\n    const out2 = {\n      ...out1,\n      ...permissions,\n      _id,\n    };\n    return out2 as EntryWithPermissions<T>;\n  };\n\n  protected pushPermission = (permission: EntryWithPermissions<T>) => {\n    return this._colPermissions.push(permission);\n  };\n\n  protected pushData = (data: WithEntity<T>) => {\n    return this._collection.push(data);\n  };\n\n  private _createPermission = (...ids: string[]) => {\n    const permissions: EntryWithPermissions<T>[] = [];\n    ids.forEach(id => {\n      const input = this.generatePermissionCreate(id);\n      this.pushPermission(input);\n      permissions.push(input);\n    });\n\n    return permissions;\n  };\n\n  private _createData = (actorID: string, data: WT<T>, _id = nanoid()) => {\n    const input = CollectionDB.buildCreate(actorID, data, _id);\n    this.pushData(input);\n    return input;\n  };\n\n  private generateCreate = (\n    actorID: string,\n    data: WithoutTimeStamps<T>,\n    _id = nanoid(),\n  ) => {\n    const input = this._createData(actorID, data, _id);\n    this._createPermission(input._id);\n    return input;\n  };\n\n  // #endregion\n\n  // #region Creation\n  createMany: CreateMany<T> = async ({\n    actorID,\n    data: _datas,\n    options,\n  }) => {\n    // #region Check actor's permissions\n    const canCreate = this.canCreate(actorID);\n    if (!canCreate) {\n      return CollectionDB.generateServerError(\n        510,\n        'This actor cannot create elements',\n      );\n    }\n    // #endregion\n\n    const inputs = _datas.map(data =>\n      CollectionDB.buildCreate(actorID, data),\n    );\n\n    if (options && options.limit && options.limit < _datas.length) {\n      const limit = options.limit;\n\n      // #region Pushs\n      const _inputs = inputs.slice(0, limit);\n      this._collection.push(..._inputs);\n      const ids = _inputs.map(({ _id }) => _id);\n      this._createPermission(...ids);\n      // #endregion\n\n      const payload = _inputs.map(input => input._id);\n      const messages = ['Limit exceeded'];\n      const rd = new ReturnData({ status: 110, payload, messages });\n      return rd;\n    }\n\n    // #region Pushs\n    this._collection.push(...inputs);\n    const ids = inputs.map(({ _id }) => _id);\n    this._createPermission(...ids);\n    // #endregion\n\n    const payload = inputs.map(input => input._id) as string[];\n    const rd = new ReturnData({ status: 210, payload });\n    return rd;\n  };\n\n  createOne: CreateOne<T> = async ({ data, actorID }) => {\n    // #region Check actor's permissions\n    const canCreate = this.canCreate(actorID);\n    if (!canCreate) {\n      return CollectionDB.generateServerError(\n        511,\n        'This actor cannot create elements',\n      );\n    }\n    // #endregion\n\n    const input = this.generateCreate(actorID, data);\n    const payload = input._id;\n    const rd = new ReturnData({ status: 211, payload });\n    return rd;\n  };\n\n  upsertOne: UpsertOne<T> = async ({ actorID, id: _id, data }) => {\n    // #region Check actor's permissions\n    const canCreate = this.canCreate(actorID);\n    if (!canCreate) {\n      return CollectionDB.generateServerError(\n        512,\n        'This actor cannot create elements',\n      );\n    }\n    // #endregion\n\n    const _filter = (data: WithEntity<T>) => _id === data._id;\n    const _exist = this._collection.find(_filter);\n    if (_exist) {\n      const messages = ['Already exists'];\n      return new ReturnData({ status: 312, payload: _id, messages });\n    } else {\n      this.generateCreate(actorID, data, _id);\n      return new ReturnData({ status: 212, payload: _id });\n    }\n  };\n\n  upsertMany: UpsertMany<T> = async ({ actorID, upserts, options }) => {\n    const canCreate = this.canCreate(actorID);\n    if (!canCreate) {\n      return CollectionDB.generateServerError(\n        513,\n        'This actor cannot create elements',\n      );\n    }\n    const inputs = upserts.map(({ _id, data }) => ({\n      _id: _id ?? nanoid(),\n      ...data,\n    })) as WithId<WT<T>>[];\n\n    let alreadyExists = 0;\n\n    const checkLimit =\n      options && options.limit && options.limit > upserts.length;\n    if (checkLimit) {\n      const limit = options.limit;\n      const _inputs = inputs.slice(0, limit).map(({ _id, ...data }) => {\n        const _filter = (data: WithEntity<T>) => _id === data._id;\n        const _exist = this._collection.find(_filter)?._id;\n        if (_exist) alreadyExists++;\n        else {\n          // #region Pushs\n          const _input = CollectionDB.buildCreate<T>(\n            actorID,\n            data as any,\n            _id,\n          );\n          this._collection.push(_input);\n          this._createPermission(_input._id);\n          // #endregion\n        }\n        return { _id, ...data };\n      });\n      if (alreadyExists > 0) {\n        const check = alreadyExists === upserts.length;\n        if (check) {\n          return CollectionDB.generateServerError(513, 'All data exists');\n        }\n        return new ReturnData({\n          status: 313,\n          payload: _inputs.map(input => input._id),\n          messages: [`${alreadyExists} already exist`],\n        });\n      } else {\n        return new ReturnData({\n          status: 113,\n          payload: _inputs.map(input => input._id),\n          messages: ['Limit is reached'],\n        });\n      }\n    }\n\n    inputs.forEach(({ _id, ...data }) => {\n      const _filter = (data: WithEntity<T>) => _id === data._id;\n      const _exist = this._collection.find(_filter)?._id;\n\n      if (_exist) alreadyExists++;\n      else {\n        // #region Pushs\n        const _input = CollectionDB.buildCreate<T>(\n          actorID,\n          data as any,\n          _id,\n        );\n        this._collection.push(_input);\n        this._createPermission(_input._id);\n        // #endregion\n      }\n      return { _id, ...data };\n    });\n\n    if (alreadyExists > 0) {\n      return new ReturnData({\n        status: 313,\n        payload: inputs.map(input => input._id),\n        messages: [`${alreadyExists} already exist`],\n      });\n    } else {\n      return new ReturnData({\n        status: 213,\n        payload: inputs.map(input => input._id),\n      });\n    }\n  };\n  // #endregion\n  // #endregion\n\n  // #region Read\n\n  // #region Private\n  private _canRead = (actorID: string) => {\n    if (!this.checkPermissions) return true;\n    const actor = this._getActor(actorID);\n    if (!actor) return false;\n    const isSuperAdmin = actor.superAdmin;\n    if (isSuperAdmin) return true;\n    return actor;\n    // const { permissions, reads } = this.getDataAndPermissions(filters);\n  };\n\n  private _reduceByPermissions = <\n    P extends Projection<WithId<WithoutTimeStamps<T>>> = [],\n  >({\n    actor,\n    filters,\n    ids,\n    options,\n  }: ReduceByPermissionsArgs<T, P>) => {\n    const args = ids ? ([filters, ...ids] as const) : ([filters] as const);\n    const rawReads = this._withoutTimestamps(...args);\n    const isLimited = !!options?.limit && options.limit > rawReads.length;\n\n    const slicedReads = rawReads.slice(0, options?.limit);\n    type Out = WithId<WT<T>>[];\n    const projection = (options?.projection ?? []) as P;\n\n    const rawReadsWithProjection = slicedReads.map(data => {\n      return withProjection(data, ...projection);\n    }) as Out;\n    /**\n     * Check if some records are resticted by permissions\n     */\n    let isRestricted = false;\n\n    /**\n     * Grant all permissions for superAdmin\n     */\n    if (actor === true) {\n      return { payload: rawReadsWithProjection, isRestricted, isLimited };\n    }\n\n    if (rawReadsWithProjection.length === 0) {\n      return { payload: rawReadsWithProjection, isRestricted, isLimited };\n    }\n\n    const actorPermissions = actor.permissions;\n    const rawPermissions = this._withoutTimestampsPermissions(\n      ...slicedReads,\n    );\n\n    /**\n     * Decompose the raw Reads for better permission checking\n     */\n    const flattenReads = slicedReads.map(decompose);\n\n    /**\n     * Filter keys with projection\n     */\n    const flattenReadsWithProjection = flattenReads.map(data => {\n      return withProjection2(data, ...projection);\n    });\n\n    /**\n     * Decompose the raw Permission for better permission checking\n     */\n    const flattenPermissions = rawPermissions.map(decompose) as any[];\n\n    const payload: Out = [];\n\n    flattenPermissions.forEach(({ _id, ...perm }, index) => {\n      const permissionsEntries = Object.entries(perm);\n\n      // #region Check if the data has no permissions restrictions\n      const permissionsValues = permissionsEntries.map(\n        ([, value]) => value,\n      );\n      const entriesData = Object.entries(\n        flattenReadsWithProjection[index],\n      );\n      const check1 = permissionsValues.every(\n        (val: any) => val.length === 0,\n      );\n      if (check1) {\n        payload.push(flattenReadsWithProjection[index] as any);\n      }\n      // #endregion\n      else {\n        const restrictedKeys: string[] = [];\n\n        // #region Check if actor has all required permissions\n        permissionsEntries.forEach(([key1, value1]) => {\n          const __read = (value1 as PermissionsArray).__read;\n          const check11 = __read.every(_read =>\n            actorPermissions.includes(_read),\n          );\n          if (!check11) {\n            restrictedKeys.push(key1);\n            if (isRestricted === false) isRestricted = true;\n          }\n        });\n        const check2 = restrictedKeys.length === 0;\n        if (check2) {\n          payload.push(rawReads[index] as any);\n        }\n        // #endregion\n        else {\n          // #region Update the read without the restricted keys\n          const newRead = entriesData.filter(\n            ([key]) => !restrictedKeys.includes(key),\n          );\n\n          const updatedRead = recompose(Object.fromEntries(newRead));\n          payload.push({\n            _id,\n            ...updatedRead,\n          } as any);\n          // #endregion\n        }\n      }\n    });\n\n    return { payload, isRestricted, isLimited };\n  };\n\n  private _canReadExtended = (reads: any[]) => {\n    return reads.some(read => {\n      const keys = Object.keys(read);\n      const len = keys.length;\n      return len > 1;\n    });\n  };\n\n  // #endregion\n\n  readAll: ReadAll<T> = async (actorID, options) => {\n    const actor = this._canRead(actorID);\n    if (actor !== true) {\n      const out = new ReturnData({\n        status: 620,\n        messages: ['Only SuperAdmin can read all data'],\n      });\n      return out;\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(520, 'Empty');\n    }\n    const rawReads = this._withoutTimestamps();\n\n    const check =\n      !!options && options.limit && options.limit > rawReads.length;\n\n    if (check) {\n      return new ReturnData({\n        status: 320,\n        payload: rawReads.slice(0, options.limit),\n        messages: ['Limit exceed data available'],\n      });\n    }\n\n    return new ReturnData({\n      status: 220,\n      payload: rawReads.slice(0, options?.limit),\n    });\n  };\n\n  readMany: ReadMany<T> = async ({ actorID, filters, options }) => {\n    const actor = this._canRead(actorID);\n\n    if (actor === false) {\n      return new ReturnData({\n        status: 621,\n        notPermitteds: ['ALL'],\n        messages: ['Actor not exists'],\n      });\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(521, 'Empty');\n    }\n\n    const { payload, isRestricted, isLimited } = this._reduceByPermissions(\n      {\n        actor,\n        filters,\n        options,\n      },\n    );\n\n    if (!payload.length) {\n      return new ReturnData({\n        status: 321,\n        messages: ['Empty'],\n      });\n    }\n\n    const canRead = this._canReadExtended(payload);\n    if (!canRead) {\n      return new ReturnData({\n        status: 621,\n        notPermitteds: ['ALL'],\n        messages: [`Actor ${actorID} cannot read the data`],\n        payload,\n      });\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 321,\n        payload,\n        messages: ['Some data keys are restricted'],\n      });\n    }\n\n    if (isLimited) {\n      return new ReturnData({\n        status: 121,\n        payload,\n        messages: ['Limit Reached'],\n      });\n    }\n\n    return new ReturnData({\n      status: 221,\n      payload,\n    });\n  };\n\n  readManyByIds: ReadManyByIds<T> = async ({\n    actorID,\n    ids,\n    filters,\n    options,\n  }) => {\n    const actor = this._canRead(actorID);\n\n    if (actor === false) {\n      return new ReturnData({\n        status: 622,\n        notPermitteds: ['ALL'],\n        messages: ['Actor not exists'],\n      });\n    }\n\n    if (!this._collection.length) {\n      CollectionDB.generateServerError(522, 'Empty');\n    }\n\n    const { payload, isRestricted, isLimited } = this._reduceByPermissions(\n      {\n        actor,\n        filters,\n        ids,\n        options,\n      },\n    );\n\n    if (!payload.length) {\n      return new ReturnData({\n        status: 322,\n        messages: ['Empty'],\n      });\n    }\n\n    const canRead = this._canReadExtended(payload);\n    if (!canRead) {\n      return new ReturnData({\n        status: 622,\n        notPermitteds: ['ALL'],\n        messages: [`Actor ${actorID} cannot read the data`],\n        payload,\n      });\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 322,\n        payload,\n        messages: ['Some data keys are restricted'],\n      });\n    }\n\n    if (isLimited) {\n      return new ReturnData({\n        status: 122,\n        payload,\n        messages: ['Limit Reached'],\n      });\n    }\n\n    return new ReturnData({\n      status: 222,\n      payload,\n    });\n  };\n\n  readOne: ReadOne<T> = async ({ actorID, filters, options }) => {\n    const actor = this._canRead(actorID);\n\n    if (actor === false) {\n      return new ReturnData({\n        status: 623,\n        notPermitteds: ['ALL'],\n        messages: ['Actor not exists'],\n      });\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(523, 'Empty');\n    }\n\n    const { payload: payloads, isRestricted } = this._reduceByPermissions({\n      actor,\n      filters,\n      options,\n    });\n\n    const payload = payloads[0];\n    if (!payload) {\n      return CollectionDB.generateServerError(523, 'Not Found');\n    }\n\n    const canRead = this._canReadExtended(payloads);\n    if (!canRead) {\n      return new ReturnData({\n        status: 623,\n        notPermitteds: ['ALL'],\n        messages: [`Actor ${actorID} cannot read the data`],\n        payload,\n      });\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 323,\n        payload,\n        messages: ['Some data keys are restricted'],\n      });\n    }\n\n    return new ReturnData({ status: 223, payload });\n  };\n\n  readOneById: ReadOneById<T> = async ({\n    actorID,\n    id,\n    filters,\n    options,\n  }) => {\n    const actor = this._canRead(actorID);\n\n    if (actor === false) {\n      return new ReturnData({\n        status: 624,\n        notPermitteds: ['ALL'],\n        messages: ['Actor not exists'],\n      });\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(523, 'Empty');\n    }\n\n    const { payload: payloads, isRestricted } = this._reduceByPermissions({\n      actor,\n      filters,\n      options,\n      ids: [id],\n    });\n\n    const payload = payloads[0];\n    if (!payload) {\n      return CollectionDB.generateServerError(524, 'Not Found');\n    }\n\n    const canRead = this._canReadExtended(payloads);\n    if (!canRead) {\n      return new ReturnData({\n        status: 624,\n        notPermitteds: ['ALL'],\n        messages: [`Actor ${actorID} cannot read the data`],\n        payload,\n      });\n    }\n\n    if (isRestricted) {\n      return new ReturnData({\n        status: 324,\n        payload,\n        messages: ['Some data keys are restricted'],\n      });\n    }\n\n    return new ReturnData({ status: 224, payload });\n  };\n\n  countAll: CountAll = async actorID => {\n    const actor = this._canRead(actorID);\n\n    if (actor !== true)\n      return CollectionDB.generateServerError(\n        525,\n        'Only superadmin can count all',\n      );\n    const out = this._collection.length;\n    if (out <= 0) {\n      return CollectionDB.generateServerError(525, 'Empty');\n    }\n    return new ReturnData({ status: 225, payload: out });\n  };\n\n  count: Count<T> = async ({ actorID, filters, options }) => {\n    const actor = this._canRead(actorID);\n\n    if (actor === false) {\n      return new ReturnData({\n        status: 626,\n        notPermitteds: ['ALL'],\n        messages: ['Actor not exists'],\n      });\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(526, 'Empty');\n    }\n\n    const payload = this._collection.filter(\n      inStreamSearchAdapter(filters),\n    ).length;\n\n    if (payload <= 0) {\n      return new ReturnData({ status: 326, messages: ['Empty'] });\n    }\n    const limit = options?.limit;\n    if (limit && limit > payload) {\n      return new ReturnData({\n        status: 126,\n        payload: limit,\n        messages: ['Limit Reached'],\n      });\n    }\n    return new ReturnData({ status: 226, payload });\n  };\n\n  // #endregion\n\n  updateAll: UpdateAll<T> = async ({ actorID, data, options }) => {\n    const actor = this._canRead(actorID);\n\n    if (actor === false) {\n      return new ReturnData({\n        status: 627,\n        notPermitteds: ['ALL'],\n        messages: ['Actor not exists'],\n      });\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(527, 'Empty');\n    }\n\n    const helper: WithEntity<T>[] = [];\n    const db = merge(helper, this._collection) as WithEntity<T>[];\n\n    const limit = options?.limit;\n    const inputs = db\n      .slice(0, limit)\n      .map(_data => merge(_data, data)) as WithEntity<T>[];\n\n    if (limit && limit <= db.length) {\n      this._collection.length = 0;\n      this._collection.push(...inputs);\n      return new ReturnData({\n        status: 127,\n        payload: inputs.map(input => input._id),\n        messages: ['Limit Reached'],\n      });\n    }\n    return new ReturnData({\n      status: 227,\n      payload: inputs.map(input => input._id),\n    });\n  };\n\n  updateMany: UpdateMany<T> = async ({\n    actorID,\n    filters,\n    data,\n    options,\n  }) => {\n    const actor = this._canRead(actorID);\n\n    if (actor === false) {\n      return new ReturnData({\n        status: 627,\n        notPermitteds: ['ALL'],\n        messages: ['Actor not exists'],\n      });\n    }\n\n    if (!this._collection.length) {\n      return CollectionDB.generateServerError(528, 'Empty');\n    }\n    const db = [...this._collection];\n\n    const _filter = inStreamSearchAdapter(filters);\n    const limit = options?.limit;\n    const inputs = db.filter(_filter);\n\n    const payload = inputs.slice(0, limit).map(input => input._id);\n    if (!inputs.length) {\n      return new ReturnData({\n        status: 328,\n        messages: ['Filters kill data'],\n      });\n    }\n\n    if (limit && limit < inputs.length) {\n      this.__update(payload, data);\n      return new ReturnData({\n        status: 122,\n        payload,\n        messages: ['Limit Reached'],\n      });\n    }\n    return new ReturnData({\n      status: 222,\n      payload,\n    });\n  };\n\n  updateManyByIds: UpdateManyByIds<T> = async ({\n    ids,\n    filters,\n    data,\n    options,\n  }) => {\n    if (!this._collection.length) {\n      return new ReturnData({ status: 523, messages: ['Empty'] });\n    }\n    const db = [...this._collection];\n    const limit = options?.limit;\n\n    // const mapper = (_data: WI<T>) => ({ ..._data, ...data });\n\n    const inputs1 = db.filter(data => ids.includes(data._id));\n\n    if (!inputs1.length) {\n      return new ReturnData({\n        status: 323,\n        messages: ['ids cannot reach DB'],\n      });\n    }\n    if (!filters) {\n      const payload = inputs1.slice(0, limit).map(input => input._id);\n\n      this.__update(payload, data);\n      this._collection; //?\n      if (limit && limit < inputs1.length) {\n        return new ReturnData({\n          status: 123,\n          payload,\n          messages: ['Limit Reached'],\n        });\n      }\n      return new ReturnData({\n        status: 223,\n        payload,\n      });\n    }\n    const _filter = inStreamSearchAdapter(filters);\n    const inputs2 = inputs1.filter(_filter);\n    inputs2.length; //?\n    const payload = inputs2.slice(0, limit).map(input => input._id);\n\n    this.__update(payload, data);\n\n    if (!inputs2.length) {\n      return new ReturnData({\n        status: 523,\n        messages: ['Filters kill data'],\n      });\n    }\n    if (limit && limit < inputs2.length) {\n      return new ReturnData({\n        status: 123,\n        payload,\n        messages: ['Limit Reached'],\n      });\n    }\n\n    if (inputs2.length < inputs1.length) {\n      return new ReturnData({\n        status: 323,\n        payload,\n        messages: ['Filters slice datas'],\n      });\n    }\n\n    return new ReturnData({\n      status: 223,\n      payload,\n    });\n  };\n\n  updateOne: UpdateOne<T> = async () => {\n    throw undefined;\n  };\n  updateOneById: UpdateOneById<T> = async () => {\n    throw undefined;\n  };\n  setAll: SetAll<T> = async () => {\n    throw undefined;\n  };\n  setMany: SetMany<T> = async () => {\n    throw undefined;\n  };\n  setManyByIds: SetManyByIds<T> = async () => {\n    throw undefined;\n  };\n  setOne: SetOne<T> = async () => {\n    throw undefined;\n  };\n  setOneById: SetOneById<T> = async () => {\n    throw undefined;\n  };\n  deleteAll: DeleteAll = async () => {\n    throw undefined;\n  };\n  deleteMany: DeleteMany<T> = async () => {\n    throw undefined;\n  };\n  deleteManyByIds: DeleteManyByIds<T> = async () => {\n    throw undefined;\n  };\n  deleteOne: DeleteOne<T> = async () => {\n    throw undefined;\n  };\n  deleteOneById: DeleteOneById<T> = async () => {\n    throw undefined;\n  };\n  retrieveAll: RetrieveAll = async () => {\n    throw undefined;\n  };\n  retrieveMany: RetrieveMany<T> = async () => {\n    throw undefined;\n  };\n  retrieveManyByIds: RetrieveManyByIds<T> = async () => {\n    throw undefined;\n  };\n  retrieveOne: RetrieveOne<T> = async () => {\n    throw undefined;\n  };\n  retrieveOneById: RetrieveOneById<T> = async () => {\n    throw undefined;\n  };\n  removeAll: RemoveAll = async () => {\n    throw undefined;\n  };\n  removeMany: RemoveMany<T> = async () => {\n    throw undefined;\n  };\n  removeManyByIds: RemoveManyByIds<T> = async () => {\n    throw undefined;\n  };\n  removeOne: RemoveOne<T> = async () => {\n    throw undefined;\n  };\n  removeOneById: RemoveOneById<T> = async () => {\n    throw undefined;\n  };\n}\n"],"names":["produce","castDraft","merge","ReturnData","inStreamSearchAdapter","nanoid","timestampsSchema","zodDecomposeKeys","recompose","withProjection","decompose","withProjection2"],"mappings":"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"}