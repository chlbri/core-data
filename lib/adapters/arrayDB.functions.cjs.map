{"version":3,"file":"arrayDB.functions.cjs","sources":["../../src/adapters/arrayDB.functions.ts"],"sourcesContent":["import { decompose, recompose, type Ru } from '@bemedev/decompose';\nimport { dequal } from 'dequal';\nimport { z } from 'zod';\nimport { isNotClause } from '../functions';\nimport type {\n  DataSearchOperations,\n  Projection,\n  ReduceByProjection,\n  SearchOperation,\n} from '../types';\n\nfunction inStreamSearchAdapterKey<T>(\n  op: SearchOperation<T>,\n): (arg: T) => boolean {\n  // if (!op) return () => true;\n  const keys = Object.keys(op);\n\n  if (keys.every(key => !key.includes('$'))) {\n    return (arg: T) => {\n      if (\n        typeof arg === 'string' ||\n        typeof arg === 'number' ||\n        typeof arg === 'bigint' ||\n        typeof arg === 'boolean' ||\n        typeof arg === 'undefined' ||\n        Object.keys(keys) === Object.keys(arg as any)\n      ) {\n        return dequal(op, arg);\n      }\n      return inStreamSearchAdapter(op as any)(arg);\n    };\n  }\n\n  const entries = Object.entries(op);\n\n  const switcherFunctionsByKeys = ([key, value]: [string, any]) => {\n    switch (key) {\n      // #region Object\n      case '$exists':\n        return (arg: T) => {\n          const sw = arg !== undefined && arg !== null;\n          return value ? sw : !sw;\n        };\n      case '$eq':\n        return (arg: T) => dequal(arg, value);\n      case '$ne':\n        return (arg: T) => !dequal(arg, value);\n      case '$in':\n        return (arg: T) => {\n          return (value as any[]).some(val => dequal(arg, val));\n        };\n      case '$nin':\n        return (arg: T) => {\n          return (value as any[]).every(val => !dequal(arg, val));\n        };\n      // #endregion\n\n      // #region Number\n      case '$gt':\n        return (arg: T) => arg > value;\n      case '$gte':\n        return (arg: T) => arg >= value;\n      case '$lt':\n        return (arg: T) => arg < value;\n      case '$lte':\n        return (arg: T) => arg <= value;\n      case '$mod':\n        return (arg: T) => (arg as unknown as number) % value === 0;\n      // #endregion\n\n      // #region String\n      case '$cts':\n        return (arg: T) => (arg as unknown as string).includes(value);\n      case '$sw':\n        return (arg: T) =>\n          (arg as unknown as string).trim().startsWith(value);\n      case '$ew':\n        return (arg: T) =>\n          (arg as unknown as string).trim().endsWith(value);\n      // #endregion\n\n      // #region Array\n      case '$all':\n        return (arg: T) =>\n          (arg as unknown as string[]).every(val => dequal(val, value));\n      case '$em':\n        return (arg: T) =>\n          (arg as unknown as string[]).some(val => dequal(val, value));\n      case '$size':\n        return (arg: T) => (arg as unknown as string[]).length === value;\n      // #endregion\n\n      // #region Logicals\n      case '$and':\n        return (arg: T) => {\n          const val = value as SearchOperation<T>[];\n          const out = val.reduce((acc, curr) => {\n            const search = inStreamSearchAdapterKey(curr)(arg);\n            return acc && search;\n          }, true);\n          return out;\n        };\n      case '$not':\n        return (arg: T) => {\n          const val = value as SearchOperation<T>;\n          const out = !inStreamSearchAdapterKey(val)(arg);\n          return out;\n        };\n      case '$nor':\n        return (arg: T) => {\n          const val = value as SearchOperation<T>[];\n          const out = val.reduce((acc, curr) => {\n            const search = inStreamSearchAdapterKey(curr)(arg);\n            return acc && !search;\n          }, true);\n          return out;\n        };\n      case '$or':\n        return (arg: T) => {\n          const values = value as SearchOperation<T>[];\n          let out = false;\n          for (const curr of values) {\n            out = inStreamSearchAdapterKey(curr)(arg);\n            if (out) break;\n          }\n          return out;\n        };\n      // #endregion\n\n      default:\n        return () => false;\n    }\n  };\n\n  const funcs = entries.map(switcherFunctionsByKeys);\n\n  const resolver = (arg: T) => {\n    return funcs.reduce((acc, curr) => acc && curr(arg), true);\n  };\n\n  return resolver;\n}\n\nexport function inStreamSearchAdapter<T>(\n  filter: DataSearchOperations<T>,\n): (val: any) => boolean {\n  const funcs: ((arg: T) => boolean)[] = [];\n\n  if (isNotClause(filter)) {\n    const entries = Object.entries(filter.$not) as [\n      keyof T,\n      SearchOperation<T[keyof T]>,\n    ][];\n\n    entries.forEach(([key, value]) => {\n      if (value) {\n        const func = (arg: T) => {\n          return inStreamSearchAdapterKey(value)((arg as any)[key]);\n        };\n        funcs.push(func);\n      }\n    });\n  } else {\n    const entries = Object.entries(filter) as [\n      keyof T,\n      SearchOperation<T[keyof T]>,\n    ][];\n\n    entries.forEach(([key, value]) => {\n      if (value) {\n        const func = (arg: T) => {\n          return inStreamSearchAdapterKey(value)(arg[key]);\n        };\n        funcs.push(func);\n      }\n    });\n  }\n\n  const resolver = (arg: any) => {\n    return funcs.reduce((acc, curr) => acc && curr(arg as any), true);\n  };\n  return resolver;\n}\n\n// #region ZodMatching\nexport type ZodMatching<\n  T extends z.ZodRawShape,\n  B extends boolean = true,\n  Key = keyof T,\n> = Key extends string\n  ? T[Key] extends z.AnyZodObject\n    ?\n        | `${Key}.${ZodMatching<T[Key]['shape'], B>}`\n        | (B extends true ? Key : never)\n    : Key\n  : never;\n// #endregion\n\nfunction _zodDecomposeKeys(shape: z.ZodRawShape, addObjectKey = true) {\n  const entries = Object.entries(shape).sort(([key1], [key2]) => {\n    return key1.localeCompare(key2);\n  });\n\n  const out: string[] = [];\n  entries.forEach(([key, value]) => {\n    if (value instanceof z.ZodObject) {\n      const virtuals = _zodDecomposeKeys(value.shape, addObjectKey).map(\n        val1 => {\n          return `${key}.${val1}`;\n        },\n      );\n      if (addObjectKey) out.push(key);\n      out.push(...virtuals);\n    } else {\n      out.push(key);\n    }\n  });\n  return out;\n}\n\nexport function zodDecomposeKeys<\n  Z extends z.ZodRawShape,\n  B extends boolean = true,\n>(shape: Z, addObjectKey?: B) {\n  return _zodDecomposeKeys(shape, addObjectKey) as ZodMatching<Z, B>[];\n}\n\nfunction cleanProjection(...datas: string[]) {\n  const out: string[] = [];\n  datas.forEach(data => {\n    const checkString = data.split('.')[0];\n    const check = out.includes(checkString);\n    if (!check) out.push(data);\n  });\n  return out;\n}\n\n/**\n *\n * @param data the data to reduce\n * @param projection The shape that the data will take\n */\nexport function withProjection<T extends Ru, P extends Projection<T> = []>(\n  data: T,\n  ...projection: P\n) {\n  const check = !projection.length;\n  if (check) return data as ReduceByProjection<T, P>;\n  const decomposed = decompose(data) as any;\n  const reduced: any = {};\n  const cleaned = cleanProjection(...projection);\n  cleaned.forEach(key => {\n    reduced[key] = decomposed[key];\n  });\n  const recomposed = recompose(reduced);\n\n  return recomposed as ReduceByProjection<T, P>;\n}\n\n/**\n * Same as @link {withProjection}, but here the data is already flatten\n * @param data Data is already flatten\n * @param projection The shape that the data will take\n */\nexport function withProjection2<T extends Ru>(\n  data: T,\n  ...projection: string[]\n) {\n  const check = !projection.length;\n  if (check) return data;\n  const reduced: any = {};\n  const cleaned = cleanProjection(...projection);\n  cleaned.forEach(key => {\n    reduced[key] = data[key];\n  });\n  return reduced;\n}\n"],"names":["dequal","isNotClause","z","decompose","recompose"],"mappings":";;;;;;;AAWA,SAAS,wBAAwB,CAC/B,EAAsB,EAAA;;IAGtB,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAE7B,IAAA,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;QACzC,OAAO,CAAC,GAAM,KAAI;YAChB,IACE,OAAO,GAAG,KAAK,QAAQ;gBACvB,OAAO,GAAG,KAAK,QAAQ;gBACvB,OAAO,GAAG,KAAK,QAAQ;gBACvB,OAAO,GAAG,KAAK,SAAS;gBACxB,OAAO,GAAG,KAAK,WAAW;AAC1B,gBAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,GAAU,CAAC,EAC7C;AACA,gBAAA,OAAOA,aAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;aACxB;AACD,YAAA,OAAO,qBAAqB,CAAC,EAAS,CAAC,CAAC,GAAG,CAAC,CAAC;AAC/C,SAAC,CAAC;KACH;IAED,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAEnC,MAAM,uBAAuB,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAgB,KAAI;QAC9D,QAAQ,GAAG;;AAET,YAAA,KAAK,SAAS;gBACZ,OAAO,CAAC,GAAM,KAAI;oBAChB,MAAM,EAAE,GAAG,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;oBAC7C,OAAO,KAAK,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;AAC1B,iBAAC,CAAC;AACJ,YAAA,KAAK,KAAK;gBACR,OAAO,CAAC,GAAM,KAAKA,aAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACxC,YAAA,KAAK,KAAK;AACR,gBAAA,OAAO,CAAC,GAAM,KAAK,CAACA,aAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACzC,YAAA,KAAK,KAAK;gBACR,OAAO,CAAC,GAAM,KAAI;AAChB,oBAAA,OAAQ,KAAe,CAAC,IAAI,CAAC,GAAG,IAAIA,aAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AACxD,iBAAC,CAAC;AACJ,YAAA,KAAK,MAAM;gBACT,OAAO,CAAC,GAAM,KAAI;AAChB,oBAAA,OAAQ,KAAe,CAAC,KAAK,CAAC,GAAG,IAAI,CAACA,aAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAC1D,iBAAC,CAAC;;;AAIJ,YAAA,KAAK,KAAK;gBACR,OAAO,CAAC,GAAM,KAAK,GAAG,GAAG,KAAK,CAAC;AACjC,YAAA,KAAK,MAAM;gBACT,OAAO,CAAC,GAAM,KAAK,GAAG,IAAI,KAAK,CAAC;AAClC,YAAA,KAAK,KAAK;gBACR,OAAO,CAAC,GAAM,KAAK,GAAG,GAAG,KAAK,CAAC;AACjC,YAAA,KAAK,MAAM;gBACT,OAAO,CAAC,GAAM,KAAK,GAAG,IAAI,KAAK,CAAC;AAClC,YAAA,KAAK,MAAM;gBACT,OAAO,CAAC,GAAM,KAAM,GAAyB,GAAG,KAAK,KAAK,CAAC,CAAC;;;AAI9D,YAAA,KAAK,MAAM;gBACT,OAAO,CAAC,GAAM,KAAM,GAAyB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAChE,YAAA,KAAK,KAAK;AACR,gBAAA,OAAO,CAAC,GAAM,KACX,GAAyB,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACxD,YAAA,KAAK,KAAK;AACR,gBAAA,OAAO,CAAC,GAAM,KACX,GAAyB,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;;AAItD,YAAA,KAAK,MAAM;gBACT,OAAO,CAAC,GAAM,KACX,GAA2B,CAAC,KAAK,CAAC,GAAG,IAAIA,aAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AAClE,YAAA,KAAK,KAAK;gBACR,OAAO,CAAC,GAAM,KACX,GAA2B,CAAC,IAAI,CAAC,GAAG,IAAIA,aAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AACjE,YAAA,KAAK,OAAO;gBACV,OAAO,CAAC,GAAM,KAAM,GAA2B,CAAC,MAAM,KAAK,KAAK,CAAC;;;AAInE,YAAA,KAAK,MAAM;gBACT,OAAO,CAAC,GAAM,KAAI;oBAChB,MAAM,GAAG,GAAG,KAA6B,CAAC;oBAC1C,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAI;wBACnC,MAAM,MAAM,GAAG,wBAAwB,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;wBACnD,OAAO,GAAG,IAAI,MAAM,CAAC;qBACtB,EAAE,IAAI,CAAC,CAAC;AACT,oBAAA,OAAO,GAAG,CAAC;AACb,iBAAC,CAAC;AACJ,YAAA,KAAK,MAAM;gBACT,OAAO,CAAC,GAAM,KAAI;oBAChB,MAAM,GAAG,GAAG,KAA2B,CAAC;oBACxC,MAAM,GAAG,GAAG,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAChD,oBAAA,OAAO,GAAG,CAAC;AACb,iBAAC,CAAC;AACJ,YAAA,KAAK,MAAM;gBACT,OAAO,CAAC,GAAM,KAAI;oBAChB,MAAM,GAAG,GAAG,KAA6B,CAAC;oBAC1C,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAI;wBACnC,MAAM,MAAM,GAAG,wBAAwB,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnD,wBAAA,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;qBACvB,EAAE,IAAI,CAAC,CAAC;AACT,oBAAA,OAAO,GAAG,CAAC;AACb,iBAAC,CAAC;AACJ,YAAA,KAAK,KAAK;gBACR,OAAO,CAAC,GAAM,KAAI;oBAChB,MAAM,MAAM,GAAG,KAA6B,CAAC;oBAC7C,IAAI,GAAG,GAAG,KAAK,CAAC;AAChB,oBAAA,KAAK,MAAM,IAAI,IAAI,MAAM,EAAE;wBACzB,GAAG,GAAG,wBAAwB,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1C,wBAAA,IAAI,GAAG;4BAAE,MAAM;qBAChB;AACD,oBAAA,OAAO,GAAG,CAAC;AACb,iBAAC,CAAC;;AAGJ,YAAA;AACE,gBAAA,OAAO,MAAM,KAAK,CAAC;SACtB;AACH,KAAC,CAAC;IAEF,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AAEnD,IAAA,MAAM,QAAQ,GAAG,CAAC,GAAM,KAAI;QAC1B,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AAC7D,KAAC,CAAC;AAEF,IAAA,OAAO,QAAQ,CAAC;AAClB,CAAC;AAEK,SAAU,qBAAqB,CACnC,MAA+B,EAAA;IAE/B,MAAM,KAAK,GAA4B,EAAE,CAAC;AAE1C,IAAA,IAAIC,qBAAW,CAAC,MAAM,CAAC,EAAE;QACvB,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAGvC,CAAC;QAEJ,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAI;YAC/B,IAAI,KAAK,EAAE;AACT,gBAAA,MAAM,IAAI,GAAG,CAAC,GAAM,KAAI;oBACtB,OAAO,wBAAwB,CAAC,KAAK,CAAC,CAAE,GAAW,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5D,iBAAC,CAAC;AACF,gBAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClB;AACH,SAAC,CAAC,CAAC;KACJ;SAAM;QACL,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAGlC,CAAC;QAEJ,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAI;YAC/B,IAAI,KAAK,EAAE;AACT,gBAAA,MAAM,IAAI,GAAG,CAAC,GAAM,KAAI;oBACtB,OAAO,wBAAwB,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACnD,iBAAC,CAAC;AACF,gBAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClB;AACH,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,MAAM,QAAQ,GAAG,CAAC,GAAQ,KAAI;QAC5B,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,GAAU,CAAC,EAAE,IAAI,CAAC,CAAC;AACpE,KAAC,CAAC;AACF,IAAA,OAAO,QAAQ,CAAC;AAClB,CAAC;AAcD;AAEA,SAAS,iBAAiB,CAAC,KAAoB,EAAE,YAAY,GAAG,IAAI,EAAA;IAClE,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAI;AAC5D,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAClC,KAAC,CAAC,CAAC;IAEH,MAAM,GAAG,GAAa,EAAE,CAAC;IACzB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAI;AAC/B,QAAA,IAAI,KAAK,YAAYC,KAAC,CAAC,SAAS,EAAE;AAChC,YAAA,MAAM,QAAQ,GAAG,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,GAAG,CAC/D,IAAI,IAAG;AACL,gBAAA,OAAO,CAAG,EAAA,GAAG,CAAI,CAAA,EAAA,IAAI,EAAE,CAAC;AAC1B,aAAC,CACF,CAAC;AACF,YAAA,IAAI,YAAY;AAAE,gBAAA,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAChC,YAAA,GAAG,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;SACvB;aAAM;AACL,YAAA,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACf;AACH,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,GAAG,CAAC;AACb,CAAC;AAEe,SAAA,gBAAgB,CAG9B,KAAQ,EAAE,YAAgB,EAAA;AAC1B,IAAA,OAAO,iBAAiB,CAAC,KAAK,EAAE,YAAY,CAAwB,CAAC;AACvE,CAAC;AAED,SAAS,eAAe,CAAC,GAAG,KAAe,EAAA;IACzC,MAAM,GAAG,GAAa,EAAE,CAAC;AACzB,IAAA,KAAK,CAAC,OAAO,CAAC,IAAI,IAAG;QACnB,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AACxC,QAAA,IAAI,CAAC,KAAK;AAAE,YAAA,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,GAAG,CAAC;AACb,CAAC;AAED;;;;AAIG;SACa,cAAc,CAC5B,IAAO,EACP,GAAG,UAAa,EAAA;AAEhB,IAAA,MAAM,KAAK,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC;AACjC,IAAA,IAAI,KAAK;AAAE,QAAA,OAAO,IAAgC,CAAC;AACnD,IAAA,MAAM,UAAU,GAAGC,mBAAS,CAAC,IAAI,CAAQ,CAAC;IAC1C,MAAM,OAAO,GAAQ,EAAE,CAAC;AACxB,IAAA,MAAM,OAAO,GAAG,eAAe,CAAC,GAAG,UAAU,CAAC,CAAC;AAC/C,IAAA,OAAO,CAAC,OAAO,CAAC,GAAG,IAAG;QACpB,OAAO,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AACjC,KAAC,CAAC,CAAC;AACH,IAAA,MAAM,UAAU,GAAGC,mBAAS,CAAC,OAAO,CAAC,CAAC;AAEtC,IAAA,OAAO,UAAsC,CAAC;AAChD,CAAC;AAED;;;;AAIG;SACa,eAAe,CAC7B,IAAO,EACP,GAAG,UAAoB,EAAA;AAEvB,IAAA,MAAM,KAAK,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC;AACjC,IAAA,IAAI,KAAK;AAAE,QAAA,OAAO,IAAI,CAAC;IACvB,MAAM,OAAO,GAAQ,EAAE,CAAC;AACxB,IAAA,MAAM,OAAO,GAAG,eAAe,CAAC,GAAG,UAAU,CAAC,CAAC;AAC/C,IAAA,OAAO,CAAC,OAAO,CAAC,GAAG,IAAG;QACpB,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,OAAO,CAAC;AACjB;;;;;;;"}