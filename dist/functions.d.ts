import { AtomicData, Entity, WithoutPermissions } from './entities';
import type { Not, OSO, VSO } from './types/data';
export declare function isSearchOperation(val: any): val is VSO;
export declare function isNotClause<T = any>(value: any): value is Not<T>;
export declare function isOSO<T = any>(value: any): value is OSO<T>;
export declare function isWithoutPermissions(val: any): val is WithoutPermissions<any>;
declare type AD<T> = AtomicData<T>;
export declare function atomicData<T>(data: T, __read: AD<T>['__read'], __write: AD<T>['__write'], __delete: AD<T>['__delete']): AD<T>;
export declare function entity<T>(_id: string, shape: T): Entity;
export {};
